name: Build, Tag Git and Docker Image

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch: {}   # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Full History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Required for checking and pushing Git tags

      - name: Get Latest WordPress Version
        id: wp_version
        run: |
          # Query the WordPress API to get the latest version
          WP_LATEST=$(curl -s https://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers[0].current')
          echo "Latest WordPress version: $WP_LATEST"
          echo "::set-output name=version::$WP_LATEST"

      - name: Check if Git Tag Exists
        id: check_tag
        run: |
          TAG="${{ steps.wp_version.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
            echo "::set-output name=tag_exists::true"
          else
            echo "Tag $TAG does not exist."
            echo "::set-output name=tag_exists::false"
          fi

      - name: Create and Push Git Tag using PAT
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          TAG="${{ steps.wp_version.outputs.version }}"
          echo "Creating and pushing Git tag: $TAG"
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git tag -a "$TAG" -m "Release WordPress version $TAG"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "$TAG"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            WP_VERSION=${{ steps.wp_version.outputs.version }}
          tags: |
            ${{ github.repository }}:${{ steps.wp_version.outputs.version }}
